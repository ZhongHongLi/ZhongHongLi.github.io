(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{250:function(s,t,n){s.exports=n.p+"assets/img/ram.534be5c4.png"},251:function(s,t,n){s.exports=n.p+"assets/img/pren1.522faca9.png"},283:function(s,t,n){"use strict";n.r(t);var a=n(4),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h3",{attrs:{id:"js中的预解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中的预解析"}},[s._v("#")]),s._v(" js中的预解析")]),s._v(" "),a("p",[s._v("在Es6之前，变量使用var声明，会存在变量的预解析(函数也有预解析).\nlet和const")]),s._v(" "),a("h3",{attrs:{id:"变量和函数在内存中展示"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量和函数在内存中展示"}},[s._v("#")]),s._v(" 变量和函数在内存中展示")]),s._v(" "),a("p",[s._v("这有扯到数据去了分为=>"),a("code",[s._v("number，null，boolean，string，nudefined")]),s._v(" (基本数据类型)\n引用数据类型 "),a("code",[s._v("array function Date /^$/")]),s._v("等\n存在的方式也不同 基本数据类型按照值来操作,引用类型按照地址来操作")]),s._v(" "),a("p",[a("img",{attrs:{src:n(250),alt:"An image"}})]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("       console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//这里输出的为undefiend")]),s._v("\n\t   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("123")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t   \n\t   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("456")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t   console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 456")]),s._v("\n\t   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//函数内部是一块独立的作用域")]),s._v("\n \n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("h3",{attrs:{id:"声明和定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明和定义"}},[s._v("#")]),s._v(" 声明和定义")]),s._v(" "),a("p",[a("code",[s._v("var num=10;")]),s._v("\n这行简单的代码其实预解析的时候做了两部")]),s._v(" "),a("p",[s._v("声明 var num 提升到当前作用域下,只声明了未赋值是undefined")]),s._v(" "),a("p",[s._v("定义 num=10；定义就是给变量进行赋值")]),s._v(" "),a("h3",{attrs:{id:"var声明变量和function声明的函数在预解析的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var声明变量和function声明的函数在预解析的区别"}},[s._v("#")]),s._v(" var声明变量和function声明的函数在预解析的区别")]),s._v(" "),a("p",[s._v("1.var声明的在预解析的时候只是提前声明，但是并未赋值\n2.function声明的函数在预解析的时候会提前声明"),a("code",[s._v("并且会同时定义")])]),s._v(" "),a("h3",{attrs:{id:"预解析只在当前作用域下"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#预解析只在当前作用域下"}},[s._v("#")]),s._v(" 预解析只在当前作用域下")]),s._v(" "),a("p",[s._v("话不多说上代码")]),s._v(" "),a("div",{staticClass:"language-js(1) line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("    console.log(num);  //undefiend\n\tvar num=20;\n\tconsole.log(num); //20\n  \n  fn(100,200)\n  function fn(x,y){\n\t  var a=x+y;\n\t  console.log(a);   //300\n  }\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("p",[s._v("上面这点代码输出num时候，预解析的原因声明了未定义此时num为undefined ,第二个num会直接在同级\n作用域就近去找有没有num这个变量所以输出20,这里已经定义了num=20;\n由于函数声明和定义是同时进行的,所以fn()虽然在fn函数定义声明之前调用的，但是依然可以正常调用会正常输出300,\n"),a("img",{attrs:{src:n(251),alt:"An image"}})]),s._v(" "),a("h3",{attrs:{id:"什么是作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#什么是作用域"}},[s._v("#")]),s._v(" 什么是作用域")]),s._v(" "),a("p",[s._v("简单意会就是在某个范围内起作用的。\n作用提高程序的可靠性更重要是为了防止命名冲突这里要抛开es6")]),s._v(" "),a("h3",{attrs:{id:"作用域链"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域链"}},[s._v("#")]),s._v(" 作用域链")]),s._v(" "),a("ul",[a("li",[s._v("函数里面的作用域成为私有作用域，window所在的作用域称为全局作用域；")]),s._v(" "),a("li",[s._v("在全局作用域下声明的变量是全局变量；")]),s._v(" "),a("li",[s._v("在“私有作用域中声明的变量”和“函数的形参”都是私有变量；")])]),s._v(" "),a("p",[s._v("在私有作用域中，代码执行的时候，遇到了一个变量，首先需要确定它是否为私有变量，如果是私有变量，那么和外面的任何东西都没有关系，如果不是私有的，则往当前作用域的上级作用域进行查找，如果上级作用域也没有则继续查找，一直查找到window为止，这就是作用域链")]),s._v(" "),a("p",[s._v("当函数执行的时候，首先会形成一个新的私有作用域，然后按照如下的步骤执行：")]),s._v(" "),a("p",[s._v("1.如果有形参，先给形参赋值；")]),s._v(" "),a("p",[s._v("2.进行私有作用域中的预解析；")]),s._v(" "),a("p",[s._v("3.私有作用域中的代码从上到下执行")]),s._v(" "),a("p",[a("code",[s._v("函数会形成一个私用的作用域")]),s._v("保护里面的私用变量不受外界影响(外面修改不了里面的,里面的修改不了外面的)这也就是"),a("code",[s._v("闭包")]),s._v("的概念")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("div",{staticClass:"highlight-lines"},[a("div",{staticClass:"highlighted"},[s._v(" ")]),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br"),a("br")]),a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//undefined")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("function")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n     console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//undefined")]),s._v("\n     "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n     console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//300")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//0")]),s._v("\n")])]),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("p",[s._v("预解析第一个值为undefined,当执行func(100,200) func函数会称为一个私有的作用域会执行\n形参给X,Y赋值100,200 func中的代码进行预解析 执行func中的代码 第一个还是undefined 第二个按照代码执行为300\n最后一个在全局下 只有a=0;所以就为0;")])])}),[],!1,null,null,null);t.default=e.exports}}]);